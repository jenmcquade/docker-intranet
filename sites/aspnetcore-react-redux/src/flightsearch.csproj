<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <RuntimeFrameworkVersion>2.1.3</RuntimeFrameworkVersion>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
    <AssemblyName>FlightSearch</AssemblyName>
    <RootNamespace>FlightSearch</RootNamespace>
    <ApplicationIcon>ClientApp\favicon.ico</ApplicationIcon>
    <Authors>Jon McQuade</Authors>
    <Company>ACME Freelancing, Inc.</Company>
    <StartupObject></StartupObject>
    <Product>Flight Search</Product>
    <Description>ASP .NET Core 2.1 MVC SPA with React and Redux</Description>
    <RepositoryUrl>http://github.com/jonmcquade/aspnetcore-react-redux</RepositoryUrl>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <TypeScriptToolsVersion>2.8</TypeScriptToolsVersion>
    <OutputType>Exe</OutputType>
    <Version>2.1</Version>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="CsvHelper" Version="2.16.3" />
    <PackageReference Include="Microsoft.AspNetCore" Version="2.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.1.1" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="2.1.1" /> 
    <PackageReference Include="Microsoft.Extensions.Configuration.DockerSecrets.Unofficial" Version="1.1.2" />    
  </ItemGroup>
  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.DotNet.Watcher.Tools" Version="2.0.2" />
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.1.0-preview1-final" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="ClientApp\**" />
  </ItemGroup>
  <ItemGroup>
    <!-- Files not to show in IDE -->
    <None Remove="ClientApp\boot-client.tsx" />
    <None Remove="ClientApp\boot-server.tsx" />
    <None Remove="ClientApp\components\About.tsx" />
    <None Remove="ClientApp\components\Airport.tsx" />
    <None Remove="ClientApp\components\Filter.tsx" />
    <None Remove="ClientApp\components\Home.tsx" />
    <None Remove="ClientApp\components\Layout.tsx" />
    <None Remove="ClientApp\components\NavMenu.tsx" />
    <None Remove="ClientApp\components\Routes.tsx" />
    <None Remove="ClientApp\configureStore.ts" />
    <None Remove="ClientApp\loadPolyfill.ts" />
    <None Remove="ClientApp\polyfill.ts" />
    <None Remove="ClientApp\store\About.ts" />
    <None Remove="ClientApp\store\index.ts" />
    <None Remove="ClientApp\store\Search.ts" />
    <None Remove="yarn.lock" />
  </ItemGroup>
  <ItemGroup>
    <None Include="appsettings.*.json" CopyToPublishDirectory="Always" />
  </ItemGroup>
  <ItemGroup>
    <None Include="wwwroot\dist\plane.svg" />
  </ItemGroup>
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\boot-client.tsx" />
    <TypeScriptCompile Include="ClientApp\boot-server.tsx" />
    <TypeScriptCompile Include="ClientApp\components\About.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Airport.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Filter.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Home.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Layout.tsx" />
    <TypeScriptCompile Include="ClientApp\components\NavMenu.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Routes.tsx" />
    <TypeScriptCompile Include="ClientApp\configureStore.ts" />
    <TypeScriptCompile Include="ClientApp\loadPolyfill.ts" />
    <TypeScriptCompile Include="ClientApp\polyfill.ts" />
    <TypeScriptCompile Include="ClientApp\store\About.ts" />
    <TypeScriptCompile Include="ClientApp\store\index.ts" />
    <TypeScriptCompile Include="ClientApp\store\Search.ts" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="tsconfig.server.json">
      <DependentUpon>tsconfig.json</DependentUpon>
    </Content>
  </ItemGroup>
  <Target Name="RunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js -p --config=webpack.config.vendor.js --mode production --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js -p --mode production --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>

    <ItemGroup Condition="'$(Configuration)'=='Debug'">
      <NpmFiles Include="node_modules/**;*.json;*.js;*.lock;*.rsa" />
      <ResolvedFileToPublish Include="@(NpmFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(NpmFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>